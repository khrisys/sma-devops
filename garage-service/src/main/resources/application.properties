spring.application.name=garage-service
server.port=8081
spring.config.import=optional:configserver:${CONFIG_SERVICE_URL:http://localhost:9999}
eureka.client.service-url.defaultZone=${DISCOVERY_SERVICE_URL:http://localhost:8761/eureka}

# Avec docker compose, et la conf recuperee depuis github, ca fonctionne, peu importe le profile, et fonctionne meme sans profile tout court!
#spring.profiles.active=prod



################## H2 MEM
#spring.datasource.url=jdbc:h2:mem:garage-db;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.username=sa
#spring.datasource.password=
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
#spring.h2.console.enabled = true
#spring.h2.console.settings.trace=true
#spring.h2.console.settings.web-allow-others=true

################### MARIADB
##spring.datasource.url=${DB_GARAGE_URL:jdbc:mysql://localhost:3306/garage-db?createDatabaseIfNotExist=true}
###spring.datasource.driver-class-name=com.mysql.jdbc.Driver
##spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
###spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MariaDBDialect
##spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
################### POSTGRESQL
#spring.datasource.url=${DB_GARAGE_URL:jdbc:postgresql://localhost:5433/garage}
#spring.datasource.driver-class-name=org.postgresql.Driver
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
################### COMMUN
#spring.datasource.username=keycloak
#spring.datasource.password=password
#
#spring.jpa.show-sql = true
#spring.jpa.hibernate.ddl-auto=create-drop

spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URL:http://localhost:8080/realms/sma-realm}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWT_URL:http://localhost:8080/realms/sma-realm/protocol/openid-connect/certs}


