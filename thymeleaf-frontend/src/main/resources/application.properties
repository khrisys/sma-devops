spring.application.name=thymeleaf-frontend
server.port=8091

spring.datasource.url=jdbc:h2:mem:thymeleaf-db
spring.h2.console.enabled=true

spring.security.oauth2.client.registration.google.clientId=782329702620-feq7hnq8scsh09socq04dhornaias4bj.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.provider.google.user-name-attribute=email


spring.security.oauth2.client.registration.keycloak.client-name=keycloak
spring.security.oauth2.client.registration.keycloak.client-id=sma-thymeleaf-frontend
#spring.security.oauth2.client.registration.keycloak.client-secret=8MhBkdYB7XPqIgVnQxG3RxKPqUh9oYzp
spring.security.oauth2.client.registration.keycloak.scope=openid,profile,email,offline_access
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
#spring.security.oauth2.client.registration.keycloak.redirect-uri=http://localhost:8091/login/oauth2/code/sma-thymeleaf-frontend
spring.security.oauth2.client.registration.keycloak.redirect-uri=${KEYCLOAK_REDIRECT_URI:http://localhost:8091/login/oauth2/code/sma-thymeleaf-frontend}
spring.security.oauth2.client.provider.keycloak.issuer-uri=${KEYCLOAK_ISSUER_URI:http://localhost:8080/realms/sma-realm}

#autorisation pour un client
# preferred_username affiche par defaut lorsqu'un user est connecte avec keyclaok
spring.security.oauth2.client.provider.keycloak.user-name-attribute=preferred_username

# recuperation de public key depuis keycloak et redirection
spring.security.oauth2.client.provider.keycloak.authorization-uri=${KEYCLOAK_REDIRECT_AUTH:http://localhost:8080/realms/sma-realm/protocol/openid-connect/auth}
spring.security.oauth2.client.provider.keycloak.token-uri=${KEYCLOAK_TOKEN_AUTH:http://localhost:8080/realms/sma-realm/protocol/openid-connect/token}

#necessaire pour keycloak
#spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/sma-realm
#spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWT_URL:http://localhost:8080/realms/sma-realm/protocol/openid-connect/certs}
