services:
  mysql-db-inventory:
    image: mariadb:10.6
    container_name: mysql-db-inventory
    restart: always
    volumes:
      - mysql_data:/var/lib/mysql
    environment:
      MYSQL_DATABASE: inventory-db
      MYSQL_USER: youssfi
      MYSQL_PASSWORD: 1234
      MYSQL_ROOT_PASSWORD: admin
    ports:
      - 3306:3306
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      timeout: 5s
      retries: 10
  phpmyadmin:
    image: phpmyadmin
    restart: always
    ports:
      - 9999:80
    environment:
      PMA_HOST: mysql-db-inventory
      PMA_PORT: 3306
      PMA_ARBITRARY: 1
  postgres-service:
    image: postgres
    container_name: postgres-service
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: k1234
    ports:
      - '5432:5432'
    expose:
      - '5432'
    healthcheck:
      test: "exit 0"
  pgadmin4:
    image: dpage/pgadmin4
    container_name: pgadmin4
    restart: always
    ports:
      - "8888:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: med@gmail.com
      PGADMIN_DEFAULT_PASSWORD: azer
    volumes:
      - pgadmin_data:/var/lib/pgadmin
  keycloak:
    image: quay.io/keycloak/keycloak:latest
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres-service:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: k1234
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    command:
      - start-dev
    restart: always
    ports:
      - '8080:8080'
    expose:
      - '8080'
    depends_on:
      postgres-service:
        condition: service_healthy
  sma-discovery-service:
    build: ./discovery-client
    container_name: sma-discovery-service
    ports:
      - '8761:8761'
    expose:
      - '8761'
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8761/actuator/health" ]
      interval: 10s
      retries: 5
  sma-configuration-service:
    build: ./configuration-service
    container_name: sma-configuration-service
    ports:
      - '9999:9999'
    expose:
      - '9999'
    environment:
      - DISCOVERY_SERVICE_URL=http://sma-discovery-service:8761/eureka
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9999/actuator/health" ]
      interval: 10s
      retries: 5
    depends_on:
      sma-discovery-service:
        condition: service_healthy
  sma-garage-service:
    build: ./garage-service
    container_name: sma-garage-service
    ports:
      - '8081:8081'
    expose:
      - '8081'
    environment:
      - DISCOVERY_SERVICE_URL=http://sma-discovery-service:8761/eureka
      - CONFIG_SERVICE_URL=http://sma-configuration-service:9999
    depends_on:
      sma-configuration-service:
        condition: service_healthy
  sma-client-service:
    build: ./client-service
    container_name: sma-client-service
    ports:
      - '8082:8082'
    expose:
      - '8082'
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8082/actuator/health" ]
      interval: 10s
      retries: 5
    environment:
      - DISCOVERY_SERVICE_URL=http://sma-discovery-service:8761/eureka
      - CONFIG_SERVICE_URL=http://sma-configuration-service:9999
    depends_on:
      sma-configuration-service:
        condition: service_healthy
  sma-vehicule-service:
    build: ./vehicule-service
    container_name: sma-vehicule-service
    ports:
      - '8083:8083'
    expose:
      - '8083'
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8083/actuator/health" ]
      interval: 10s
      retries: 5
    environment:
      - DISCOVERY_SERVICE_URL=http://sma-discovery-service:8761/eureka
      - CONFIG_SERVICE_URL=http://sma-configuration-service:9999
    depends_on:
      sma-client-service:
        condition: service_healthy
  sma-document-service:
    build: ./document-service
    container_name: sma-document-service
    ports:
      - '8084:8084'
    expose:
      - '8084'
    environment:
      - DISCOVERY_SERVICE_URL=http://sma-discovery-service:8761/eureka
      - CONFIG_SERVICE_URL=http://sma-configuration-service:9999
    depends_on:
      sma-vehicule-service:
        condition: service_healthy
  sma-gateway-service:
    build: ./gateway-service
    container_name: sma-gateway-service
    ports:
      - '8888:8888'
    expose:
      - '8888'
    environment:
      - DISCOVERY_SERVICE_URL=http://sma-discovery-service:8761/eureka
      - CONFIG_SERVICE_URL=http://sma-configuration-service:9999
    depends_on:
      sma-configuration-service:
        condition: service_healthy
  angular-frontend:
    build: angular-frontend
    container_name: angular-frontend
    ports:
      - '80:80'
    expose:
      - '80'
  thymeleaf-frontend:
    build: thymeleaf-frontend
    container_name: thymeleaf-frontend
    ports:
      - '8091:8091'
    restart: always
    expose:
      - '8091'
    network_mode: host
    environment:
      - KEYCLOAK_ISSUER_URL:http://localhost:8080/realms/sma-realm
      - KEYCLOAK_JWT_URL:http://localhost:8080/realms/sma-realm/protocol/openid-connect/certs
      - KEYCLOAK_REDIRECT_URI=http://localhost:8091/login/oauth2/code/sma-customer-client
      - KEYCLOAK_AUTH=http://localhost:8080/realms/sma-realm/protocol/openid-connect/auth
      - KEYCLOAK_AUTH_TOKEN=http://localhost:8080/realms/sma-realm/protocol/openid-connect/token
volumes:
  mysql_data:
  postgres_data:
  pgadmin_data:
