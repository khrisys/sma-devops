spring.application.name=configuration-service
server.port=9999

#spring.cloud.config.server.git.uri=/home/christiandrochon/Datas/WORKSPACES/workspace_intellij_GLG204/sma-devops/configuration-repo
spring.cloud.config.server.git.uri=https://github.com/khrisys/sma-ms-config
#spring.cloud.config.server.git.uri=file:///D:/WORKSPACES/workspace_intellij_GLG204/sma-devops/configuration-repo

#CAS PARTICULIER
#Meme si les proprietes de configuration sont definies dans le repo, ce service precis a besoin de
#chercher Sa conf aussi, et c'est pourquoi on lui donne ici via la variable d'env DISCOVERY_SERVICE_URL
eureka.client.service-url.defaultZone=${DISCOVERY_SERVICE_URL:http://localhost:8761/eureka}



#A REMETTRE DANS LE REPO
# activation de la configuration distante
spring.cloud.config.enabled=false

# s'enregistrer aupres de discovery service
spring.cloud.discovery.enabled=true

# 2 proprietes necessaires a spring security pour savoir ou se trouve la clef publique du JWT sur keycloak
#spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URL:http://localhost:8080/realms/sma-realm}
#spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWT_URL:http://localhost:8080/realms/sma-realm/protocol/openid-connect/certs}

#eureka
eureka.instance.prefer-ip-address=true

#actuator
management.endpoints.web.exposure.include=*

