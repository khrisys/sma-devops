services:
#  mysql-db-garage:
#    image: mariadb:10.6
#    container_name: mysql-db-garage
#    restart: always
#    volumes:
#      - mysql_data:/var/lib/mysql
#      - ./mysql.sql:/docker-entrypoint-initdb.d/mysql.sql
##    env_file:
##      - mysql.sql
#    environment:
#      MYSQL_DATABASE: garage-db
#      MYSQL_USER: khris
#      MYSQL_PASSWORD: 123456
#      MYSQL_ROOT_PASSWORD: admin
#      MYSQL_PORT: 3306
##      MYSQL_HOST: DB_GARAGE_URL:jdbc:mysql://mysql-db-garage:3306/garage-db
#    ports:
#      - 3306:3306
#    healthcheck:
#      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
#      timeout: 5s
#      retries: 10
#  phpmyadmin:
#    image: phpmyadmin
#    container_name: phpmyadmin
#    depends_on:
#      - mysql-db-garage
#    restart: always
#    ports:
#      - 6001:80
#    environment:
#      PMA_HOST: mysql-db-garage
#      PMA_PORT: 3306
#      PMA_ARBITRARY: 1




  sma-discovery-service:
    build: ./discovery-client
    container_name: sma-discovery-service
    ports:
      - '8761:8761'
    expose:
      - '8761'
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://sma-discovery-service:8761/actuator/health" ]
      interval: 10s
      retries: 5
  sma-configuration-service:
    build: ./configuration-service
    container_name: sma-configuration-service
    ports:
      - '9999:9999'
    expose:
      - '9999'
    environment:
      DISCOVERY_SERVICE_URL: http://sma-discovery-service:8761/eureka
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://sma-configuration-service:9999/actuator/health" ]
      interval: 10s
      retries: 5
    depends_on:
      sma-discovery-service:
        condition: service_healthy

  sma-garage-service:
    build: ./garage-service
    container_name: sma-garage-service
    ports:
      - '8081:8081'
    expose:
      - '8081'
    environment:
      DB_GARAGE_URL: jdbc:postgresql://postgres-garage:5433/garage
      POSTGRES_DB: garage
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
      DISCOVERY_SERVICE_URL: http://sma-discovery-service:8761/eureka
      CONFIG_SERVICE_URL: http://sma-configuration-service:9999
    depends_on:
      postgres-garage:
        condition: service_healthy
      sma-configuration-service:
        condition: service_healthy
  postgres-garage:
    image: postgres
    restart: always
    volumes:
      - pg_data_garage:/var/lib/postgresql/data
      - ./initbd.sh:/docker-entrypoint-initdb.d/initdb.sh
    environment:
      POSTGRES_DB: garage
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
    healthcheck:
      test: "exit 0"
    expose:
      - '5433'
    ports:
      - '5433:5433'
    command: -p 5433

  pgadmin4:
    image: dpage/pgadmin4
    container_name: pgadmin4
    restart: always
    ports:
      - "6002:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: pg@gmail.com
      PGADMIN_DEFAULT_PASSWORD: pgadmin
    volumes:
      - pgadmin_data:/var/lib/pgadmin

  postgres:
    image: postgres
    restart: always
    container_name: sma-postgres-server
    volumes:
      - pg_data_keycloak:/var/lib/postgresql/data
      - ./initdb_f.sh:/docker-entrypoint-initdb.d/initdb_f.sh
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
    healthcheck:
      test: "exit 0"
    expose:
      - '5434'
    ports:
      - '5434:5434'
    command: -p 5434

  keycloak:
    image: quay.io/keycloak/keycloak
    container_name: keycloak
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL_PORT: 5434
      KC_DB_URL_HOST: sma-postgres-server
      KC_DB_URL_DATABASE: keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: password
    command:
      - start-dev
      - --import-realm
    volumes:
      - /home/christiandrochon/Documents/sma-realm-export.json:/opt/keycloak/data/import/sma-realm.json
    restart: always
    ports:
      - '8080:8080'
    expose:
      - '8080'
    depends_on:
      postgres:
        condition: service_healthy
volumes:
  mysql_data:
  pg_data_keycloak:
  pg_data_garage:
  pgadmin_data:



